{
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode",
    "editor.formatOnSave": true // ファイル保存時に自動フォーマット
  },
  "[go]": {
    "editor.formatOnSave": true
  },
  "[javascript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true // ESLint のすべての自動修正可能な問題を修正
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode", // デフォルトのフォーマッターとしてPrettierを使用
    "editor.formatOnSave": true
  },
  "[javascriptreact]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.quickSuggestions": {
      "strings": true // 文字列内で入力中の単語に対してクイック候補を表示
    },
    "editor.suggest.insertMode": "replace", // 入力中の単語が選択された候補で置き換えられる
    "gitlens.codeLens.scopes": ["document"] // GitLens拡張機能のコードレンズ機能を文書スコープでのみ表示するように指定
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[typescriptreact]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "cSpell.languageSettings": [], // Code Spell Checker拡張機能の言語設定としてデフォルトの言語設定を使用
  "css.lint.unknownAtRules": "ignore", // 未知のCSS @ルールに対するリント警告を無視
  "editor.accessibilitySupport": "off", // エディターのアクセシビリティサポートを無効
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.mouseWheelZoom": true, // Ctrl + スクロールでエディターの文字「のみ」拡大縮小可能
  "editor.snippetSuggestions": "top", // Emmet などのスニペット候補を優先して表示
  "editor.tabSize": 2, // タブキーを押したときに2スペース分のインデントを挿入
  "emmet.showSuggestionsAsSnippets": true, // Emmet の候補を表示
  "emmet.triggerExpansionOnTab": true, // Tabキーを押すことでEmmetのアビブリエーションを展開
  "emmet.variables": {
    "lang": "ja" // Emmetの変数langを日本語（ja）に設定
  },
  "eslint.codeActionsOnSave.rules": null, // 保存時にESLintが実行するコードアクションのルールを無効（Prettier使用のため）
  "files.associations": {
    "*.css": "css" // ファイルの拡張子が.cssであるファイルをCSSファイルとして関連付ける
  },
  "files.insertFinalNewline": true, // ファイルの最後に新しい行を自動的に挿入
  "files.trimTrailingWhitespace": true, // 保存時に行末の空白を自動的に削除
  "git.confirmSync": false, // Git同期操作を実行する際に確認ダイアログを表示しない
  "go.formatTool": "goimports",
  "go.lintTool": "golangci-lint",
  "go.toolsManagement.autoUpdate": true, // Go言語のツールを自動的に更新
  "importSorter.importStringConfiguration.tabSize": 2, // インポート整理拡張機能のタブサイズを2スペースに設定
  "markdown.preview.fontFamily": "'OperatorMonoSSmLig-Light', 'HiraginoSans-W2'",
  "markdown.preview.fontSize": 14,
  "scm.diffDecorationsIgnoreTrimWhitespace": "true", // ソースコード管理システムの差分装飾で空白のトリムを無視
  "security.workspace.trust.untrustedFiles": "open", // 信頼されていないファイルを開くことを許可
  "stylelint.enable": true, // CSSやSCSSなどのファイルでリントを実行
  "terminal.external.osxExec": "Warp.app", // macOSの外部ターミナルとしてWarp.appを使用
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "terraform.codelens.referenceCount": true, // Terraform拡張機能のコードレンズでリソース参照数を表示
  "terraform.languageServer.enable": true, // Terraform言語サーバーを有効（ハイライト、補完、定義ジャンプ）
  "typescript.locale": "en", // TypeScriptのエラーメッセージやヒントを英語で表示
  "workbench.editor.enablePreview": false, // ファイルを開く際に新しいエディタータブが作成される
  "workbench.iconTheme": "material-icon-theme"
}
